@model NotesMarketPlace.Models.SearchNotesViewModel
@{
    ViewBag.Title = "SearchNotes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render(){

<style>
    .paginationjs-pages > ul {
        list-style: none !important;
        width: 100%;
        text-align: center;
        align-self: center;
        white-space: nowrap;
        padding-top: 60px;
        justify-content: center;
    }
        .paginationjs-pages > ul > li {
            display: inline;
        }
  @*  .paginationjs-prev a,
    .paginationjs-next a {
        border: none !important;
        color: #333333 !important;
    }*@



    .paginationjs-pages > ul > li > a {
        border: none !important;
        color: #333333 !important;
        font-size: 22px !important;
        font-weight: 400 !important;
        line-height: 20px !important;
        margin-right: 20px !important;
        margin-top: 25px !important;
        outline: none !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
    }

        .page-link:hover,
        .page-link:focus {
            background: none;
        }


    .paginationjs-pages > ul > li.active a {
        width: 34px;
        height: 34px;
        color: #fff !important;
        background-color: #6255a5;
        font-size: 22px;
        font-weight: 400;
        margin-right: 20px;
        margin-top: 25px;
        padding-left: 12px;
        padding-right: 12px;
        padding-top: 5px;
        padding-bottom: 5px;
        border-radius: 50%;
        line-height: 40px;
        text-decoration: none;
    }



</style>


}


<main role="main" class="pt-5">

    <!-- Top Section-->
    <div class="jumbotron jumbotron-fluid user-profile-banner d-flex justify-content-center align-items-center" style="height: 250px;">
        <div class="container text-center">
            <h1>Search Notes</h1>
        </div>
    </div>
    <!-- Top Section End-->
    <div class="container" style="margin-top: 60px;">
        <!-- Heading -->
        <div class="row">
            <div class="col-md-12">
                <h1 class="heading">Search and Filter notes </h1>
            </div>
        </div>
        <!-- Heading End-->
        <!-- Search and Filter -->
        <div class="jumbotron mb-0" style="padding: 30px;">
            <div class="row ">
                <div class="col-md-12">
                    <div class="form-group has-search mb-0">
                        <span class="fa fa-search form-control-feedback"></span>
                        <input type="text" class="form-control" id="Search" placeholder="Search">
                    </div>
                </div>
            </div>
            <div class="row " style="margin-top: 20px;">
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.TypeList, new SelectList(Model.TypeList, "Value", "Text"), "Select Type", new { @class = "form-control select-text", @id = "TypeList" })
                    </div>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.CategoryList, new SelectList(Model.CategoryList, "Value", "Text"), "Select Category", new { @class = "form-control select-text", @id = "CategoryList" })
                    </div>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.UniversityList, new SelectList(Model.UniversityList, "Value", "Text"), "Select University", new { @class = "form-control select-text", @id = "UniversityList" })
                    </div>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.CourseList, new SelectList(Model.CourseList, "Value", "Text"), "Select Course", new { @class = "form-control select-text", @id = "CourseList" })
                    </div>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.CountryList, new SelectList(Model.CountryList, "Value", "Text"), "Select Country", new { @class = "form-control select-text", @id = "CountryList" })
                    </div>
                </div>
                <div class="col-xl-2 col-md-4 col-sm-6">
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.RatingList, new SelectList(Model.RatingList, "Value", "Text"), "Select Rating", new { @class = "form-control select-text", @id = "RatingList" })
                    </div>
                </div>


            </div>
        </div>
        <!-- Search and Filter End-->

    </div>

    <div class="container">
        <div class="row">
            <!-- Heading -->
            <div class="col-md-12">
                <h1 class="heading" id="totalrecord" style="margin-top: 60px; margin-bottom: 30px;"></h1>
            </div>
            <!-- Heading End-->
        </div>

        <div class="row" id="model">


        </div>

    </div>

    <!-- Pagination -->
    <div class="container">
        <div class="row ">
            <div class="col-md-12 mx-auto">
                <nav aria-label="Page navigation example">
                    <div id="pagination-container"></div>

                </nav>

            </div>
        </div>
    </div>


    <!-- Pagination End -->
</main>


@section Scripts{
    <script>

        function gettemplate(d)
            {
                var text1 = "";

        var texttotal = "";

        texttotal = `<div class="container"><div class="row">`;
        for (var i = 0; i < d.length; i++) {
            text1 = `<div class="col-xl-4 col -md-4 col-sm-6"><div class="card book-card"><img src="${d[i].DisplayPicture}" class="card-img-top" width="450px" height="250px;" alt=${d["Title"]}>`
                + ` <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <a href="/Notes/NoteDetails/${d[i].ID}"">
                                        <h1 class="note-title">
                                            ${d[i].Title}
                                        </h1>
                                    </a>
                                </div>`;
            texttotal = texttotal + text1;
            if (d[i].UniversityName != null) {
                text1 = ` <div class="col-md-12">
                                        <p class="card-detail"> <i> <img src="/Content/images/Search/university.png" class="mr-2"></i>${d[i].UniversityName}</p >
                                    </div>`;
                texttotal = texttotal + text1;
            }
            if (d[i].NumberofPages != null) {
                text1 = ` <div class="col-md-12">
                                        <p class="card-detail"> <i> <img src="/Content/images/Search/pages.png" class="mr-2"></i>${d[i].NumberofPages}</p >
                                    </div>`;
                texttotal = texttotal + text1;
            }
            if (d[i].PublishedDate != null) {

                var date1 = JSON.stringify(d[i].PublishedDate).slice(7);
                date1 = Number(date1.slice(0, -3));
                var d1 = new Date(date1);
                text1 = ` <div class="col-md-12">
                                        <p class="card-detail"> <i> <img src="/Content/images/Search/date.png" class="mr-2"></i>${d1.toDateString()}</p >
                                    </div>`;
                texttotal = texttotal + text1;
            }
            if (d[i].CountOfSpamReport != null) {
                text1 = ` <div class="col-md-12">
                                        <p class="card-detail"> <i> <img src="/Content/images/Search/flag.png" class="mr-2"></i>${d[i].CountOfSpamReport}</p >
                                    </div>`;
                texttotal = texttotal + text1;
            }

            text1 = `</div>
                            <div class="row">
                                <div class="col-lg-12">`;
            texttotal = texttotal + text1;
            if (d[i].Rating != null) {
                text1 = `<span class="stars" data-rating=${d[i].Rating} data-num-stars="5"></span>`;
                texttotal = texttotal + text1;

            }
            if (d[i].NoOfReviews != null) {
                text1 = `<span class="card-detail">${d[i].NoOfReviews} reviews</span>`
                texttotal = texttotal + text1;
            }
            text1 = ` </div>
                            </div>

                        </div>
                    </div>
                </div> `;
            texttotal = texttotal + text1;
        }
        texttotal = texttotal + `</div></div>`;
        return texttotal;
            }

        $(function () {

            var Search = $("#Search").val();
            var CountryList = $("#CountryList").val();
            var TypeList = $("#TypeList").val();
            var CategoryList = $("#CategoryList").val();
            var RatingList = $("#RatingList").val();
            var UniversityList = $("#UniversityList").val();
            var CourseList = $("#CourseList").val();
             $.ajax({
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: '@Url.Action("getNotes", "Notes")',
                    type: "Post",
                    data: JSON.stringify({ Search: Search, CountryList: CountryList.toString(), CategoryList: CategoryList.toString(), RatingList: RatingList.toString(), UniversityList: UniversityList, CourseList: CourseList, TypeList: TypeList.toString() })

                })
                    .done(function (d) {
                        var count = d.length;
                            $('#pagination-container').pagination({
                                dataSource: d,
                                pageSize: 9,

                                callback: function (d, pagination) {
                                    // template method of yourself
                                    var texttotal = gettemplate(d);

                                    if (d.length > 0) {
                                        $(".paginationjs-prev a").html('<i class="fa fa-angle-left fa-2x m-0"></i>');
                                        $(".paginationjs-next a").html('<i class="fa fa-angle-right fa-2x m-0"></i>');
                                        $('#model').html(texttotal);
                                        $("#totalrecord").html("Total " + count + " Notes");

                                    }
                                    else {
                                        $("#model").html(texttotal);
                                        $("#totalrecord").html("<h1>No Record Found</h1>");
                                    }
                                }
                            });
                        $('.stars').stars();
                    });

            $("#Search,#CountryList,#TypeList,#CategoryList,#RatingList,#UniversityList,#RatingList,#CourseList").change(function () {

                var Search = $("#Search").val();
                var CountryList = $("#CountryList").val();
                var TypeList = $("#TypeList").val();
                var CategoryList = $("#CategoryList").val();
                var RatingList = $("#RatingList").val();
                var UniversityList = $("#UniversityList").val();
                var CourseList = $("#CourseList").val();
                console.log(UniversityList);
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: '@Url.Action("getNotes", "Notes")',
                    type: "Post",
                    data: JSON.stringify({ Search: Search, CountryList: CountryList.toString(), CategoryList: CategoryList.toString(), RatingList: RatingList.toString(), UniversityList: UniversityList, CourseList: CourseList, TypeList: TypeList.toString() })

                })
                    .done(function (d) {
                        var count1 = d.length;


                            $('#pagination-container').pagination({
                                dataSource: d,
                                pageSize: 9,
                                callback: function (d, pagination) {
                                    // template method of yourself
                                    var texttotal = gettemplate(d);
                                    if (d.length > 0) {
                                        $(".paginationjs-prev a").html('<i class="fa fa-angle-left fa-2x m-0"></i>');
                                        $(".paginationjs-next a").html('<i class="fa fa-angle-right fa-2x m-0"></i>');
                                        $('#model').html(texttotal);
                                        $("#totalrecord").html("Total " + count1 + " Notes");
                                    }
                                    else {
                                        $("#model").html(texttotal);
                                        $("#totalrecord").html("<h1>No Record Found</h1>");
                                        $("#pagination-container").html("");
                                    }
                                }
                            });
                        $('.stars').stars();
                    });
            });
        });



        $(function () {
            $('.stars').stars();
        });
    </script>
    @if (@TempData["Suceess"] != null)
    {

        <script type="text/javascript">
        $(function () {
                 swal({
                    text: "@TempData["Suceess"]",
                    icon: "success",
                });
        });
        </script>

    }
    @if (@TempData["Error"] != null)
    {

        <script type="text/javascript">
        $(function () {
                 swal({
                    text: "@TempData["Error"]",
                    icon: "error",
                });
        });
        </script>

    }

}


